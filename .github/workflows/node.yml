name: CI - Node

on:
  push:
    branches:
      - "main"
    paths:
      - "backend/node/**"
      - ".github/workflows/node.yml"
  pull_request:
    branches:
      - "main"
    paths:
      - "backend/node/**"
      - ".github/workflows/node.yml"

jobs:
  build:
    name: Build (Node v${{ matrix.node }})
    runs-on: ubuntu-latest
    services:
      postgres:
        image: docker.io/library/postgres:17-alpine
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
    strategy:
      matrix:
        node: ["22", "24"]
    env:
      FOLDER: backend/node

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Set up Node
        uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.node }}
          cache: "pnpm"
          cache-dependency-path: ${{ env.FOLDER }}/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: ${{ env.FOLDER }}
        run: pnpm install --frozen-lockfile

      - name: Run linter
        working-directory: ${{ env.FOLDER }}
        run: pnpm lint

      - name: Run prettier
        working-directory: ${{ env.FOLDER }}
        run: pnpm prettier

      - name: Run typecheck
        working-directory: ${{ env.FOLDER }}
        run: pnpm typecheck

      - name: Run build
        working-directory: ${{ env.FOLDER }}
        run: pnpm build

      - name: Run tests
        working-directory: ${{ env.FOLDER }}
        run: |
          cp .env.testing .env
          pnpm db:migrate
          pnpm db:seed
          pnpm test
